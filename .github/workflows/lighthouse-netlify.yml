name: Lighthouse CI for Netlify sites
on: pull_request
jobs:
  contentLinter:    
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          FILTER_REGEX_INCLUDE: ./exampleSite/content/**
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  htmlproofer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          submodules: true
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.79.0'
          extended: true
      - name: "Build Hugo"
        run: |
          pushd './exampleSite'
          hugo --minify --theme "hugo-community" --themesDir "../" --baseURL "/"
          popd
      - name: Check HTML
        uses: chabad360/htmlproofer@master
        with:
          directory: "./exampleSite/public"
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Wait for the Netlify Preview
        uses: jakepartusch/wait-for-netlify-action@v1
        id: netlify
        with:
          site_name: 'hugo-community'      
      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.6.x
          lhci collect --urls ${{ steps.netlify.outputs.url }} --url ${{ steps.netlify.outputs.url }}/community/ --url ${{ steps.netlify.outputs.url }}/events/ --url ${{ steps.netlify.outputs.url }}/groups/ --url ${{ steps.netlify.outputs.url }}/speakers/ --url ${{ steps.netlify.outputs.url }}/topics/
          lhci upload --target "temporary-public-storage"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      #- name: Audit URLs using Lighthouse
      #  uses: treosh/lighthouse-ci-action@v3
      #  with:
      #    urls: |
      #      ${{ steps.netlify.outputs.url }}
          #   ${{ steps.netlify.outputs.url }}/community/
          #   ${{ steps.netlify.outputs.url }}/events/
          #   ${{ steps.netlify.outputs.url }}/groups/
          #   ${{ steps.netlify.outputs.url }}/speakers/
          #   ${{ steps.netlify.outputs.url }}/topics/
          # uploadArtifacts: true # save results as an action artifacts
          # temporaryPublicStorage: true # upload lighthouse report to the temporary storage